console.log('Hello world!');

// // // ================================== Задача 1 ======================================
// // Функция calculateTotalPrice(orderedItems) принимает один параметр orderedItems - массив чисел, и рассчитывает общую сумму его элементов, которая сохраняется в переменной totalPrice и возвращается как результат работы функции.

// // Выполни рефакторинг функции так, чтобы вместо цикла for она использовала метод forEach.

// function calculateTotalPrice(orderedItems) {
//   let totalPrice = 0;
//   // Пиши код ниже этой строки

//   orderedItems.forEach(itemPrice => (totalPrice += itemPrice));

//   // Пиши код выше этой строки
//   return totalPrice;
// }
// // ================================== Задача 2 ======================================
// //Функция filterArray(numbers, value) принимает массив чисел numbers и возвращает новый массив, в котором будут только те элементы оригинального массива, которые больше чем значение параметра value.

// // Выполни рефакторинг функции так, чтобы вместо цикла for она использовала метод forEach.

// function filterArray(numbers, value) {
//   const filteredNumbers = [];
//   // Пиши код ниже этой строки

//   numbers.forEach(numbersElem =>
//     numbersElem > value ? filteredNumbers.push(numbersElem) : false,
//   );

//   // Пиши код выше этой строки
//   return filteredNumbers;
// }
// // ================================== Задача 3 ======================================
// //Функция getCommonElements(firstArray, secondArray) принимает два массива произвольной длины в параметры firstArray и secondArray, и возвращает новый массив их общих элементов, то есть тех которые есть в обоих массивах.

// // Выполни рефакторинг функции так, чтобы вместо цикла for она использовала метод forEach.

// function getCommonElements(firstArray, secondArray) {
//   const commonElements = [];
//   // Пиши код ниже этой строки

//   firstArray.forEach(elem =>
//     secondArray.includes(elem) ? commonElements.push(elem) : false,
//   );

//   return commonElements;
//   // Пиши код выше этой строки
// }

// // ================================== Задача 4 ======================================
// // Стрелочные функции.
// // Выполни рефакторинг функции calculateTotalPrice() так, чтобы она была объявлена как стрелочная.
// // Пиши код ниже этой строки

// const calculateTotalPrice = (quantity, pricePerItem) => {
//   // Пиши код выше этой строки
//   return quantity * pricePerItem;
// };

// // ================================== Задача 5 ======================================
// // Неявный возврат
// // Выполни рефакторинг функции calculateTotalPrice() так, чтобы она использовала неявный возврат.
// // Пиши код ниже этой строки
// const calculateTotalPrice = (quantity, pricePerItem) => quantity * pricePerItem;
// // Пиши код выше этой строки

// // ================================== Задача 6 ======================================
// // Стрелочные функции как коллбеки
// // Выполни рефакторинг функции calculateTotalPrice(orderedItems) заменив её объявление на стрелочную функцию. Замени коллбек-функцию передаваемую в метод forEach() на стрелочную функцию.
// // Пиши код ниже этой строки
// const calculateTotalPrice = orderedItems => {
//   let totalPrice = 0;

//   orderedItems.forEach(item => (totalPrice += item));

//   return totalPrice;
// };
// // Пиши код выше этой строки
// // ================================== Задача 7 ======================================
// // Задача. Фильтрация массива чисел 2.0
// // Замени объявление функции filterArray() и коллбек для метода forEach() на стрелочные функции.
// // Пиши код ниже этой строки
// const filterArray = (numbers, value) => {
//   const filteredNumbers = [];

//   numbers.forEach(number =>
//     number > value ? filteredNumbers.push(number) : false,
//   );

//   // Пиши код выше этой строки
//   return filteredNumbers;
// };
// // ================================== Задача 8 ======================================
// // Задача. Общие элементы 2.0
// // Замени объявление функции getCommonElements() и коллбек для метода forEach() на стрелочные функции.
// // Пиши код ниже этой строки
// const getCommonElements = (firstArray, secondArray) => {
//   const commonElements = [];

//   firstArray.forEach(element =>
//     secondArray.includes(element) ? commonElements.push(element) : false,
//   );

//   // Пиши код выше этой строки
//   return commonElements;
// };

// ================================== Задача 9 ======================================
// Функция changeEven(numbers, value) принимает массив чисел numbers и обновляет каждый элемент, значение которого это чётное число, добавляя к нему значение параметра value.

// Выполни рефакторинг функции так, чтобы она стала чистой - не изменяла массив чисел numbers, а создавала, наполняла и возвращала новый массив с обновлёнными значениями.

const changeEven = (numbers, value) => {
  // Пиши код ниже этой строки
  const arr = [];
  numbers.forEach(elem =>
    elem % 2 === 0 ? arr.push(elem + value) : arr.push(elem),
  );
  return arr;
  // Пиши код выше этой строки
};

// ================================== Задача 10 ======================================
// Метод map()
// Дополни код так, чтобы в переменной planetsLengths получился массив длин названий планет. Обязательно используй метод map().
const planets = ['Земля', 'Марс', 'Венера', 'Юпитер'];
// Пиши код ниже этой строки
const planetsLengths = planets.map(palnet => palnet.length);

// ================================== Задача 11 ======================================
// Метод map() и массив объектов
// Используя метод map() сделай так, чтобы в переменной titles получился массив названий книг (свойство title) из всех объектов массива books.

const books = [
  { title: 'Последнее королевство', author: 'Бернард Корнуэлл', rating: 8.38 },
  { title: 'На берегу спокойных вод', author: 'Роберт Шекли', rating: 8.51 },
  { title: 'Сон смешного человека', author: 'Федор Достоевский', rating: 7.75 },
  { title: 'Красна как кровь', author: 'Ли Танит', rating: 7.94 },
  { title: 'Враг Божий', author: 'Бернард Корнуэлл', rating: 8.67 },
];
// Пиши код ниже этой строки

const titles = books.map(book => book.title);
// ================================== Задача 12 ======================================
// Метод flatMap()
// Используя метод flatMap() сделай так, чтобы в переменной genres получился массив всех жанров книг(свойство genres) из массива книг books.

const books = [
  {
    title: 'Последнее королевство',
    author: 'Бернард Корнуэлл',
    genres: ['приключения', 'историческое'],
  },
  {
    title: 'На берегу спокойных вод',
    author: 'Роберт Шекли',
    genres: ['фантастика'],
  },
  {
    title: 'Красна как кровь',
    author: 'Ли Танит',
    genres: ['ужасы', 'мистика'],
  },
];
// Пиши код ниже этой строки

const genres = books.flatMap(book => book.genres);

// ================================== Задача 13 ======================================
// Задача. Имена пользователей
// Дополни функцию getUserNames(users) так, чтобы она возвращала массив имён пользователей (свойство name) из массива объектов в параметре users.

let users = [
  {
    name: 'Moore Hensley',
    email: 'moorehensley@indexia.com',
    eyeColor: 'blue',
    friends: ['Sharron Pace'],
    isActive: false,
    balance: 2811,
    skills: ['ipsum', 'lorem'],
    gender: 'male',
    age: 37,
  },
  {
    name: 'Sharlene Bush',
    email: 'sharlenebush@tubesys.com',
    eyeColor: 'blue',
    friends: ['Briana Decker', 'Sharron Pace'],
    isActive: true,
    balance: 3821,
    skills: ['tempor', 'mollit', 'commodo', 'veniam', 'laborum'],
    gender: 'female',
    age: 34,
  },
  {
    name: 'Ross Vazquez',
    email: 'rossvazquez@xinware.com',
    eyeColor: 'green',
    friends: ['Marilyn Mcintosh', 'Padilla Garrison', 'Naomi Buckner'],
    isActive: false,
    balance: 3793,
    skills: ['nulla', 'anim', 'proident', 'ipsum', 'elit'],
    gender: 'male',
    age: 24,
  },
  {
    name: 'Elma Head',
    email: 'elmahead@omatom.com',
    eyeColor: 'green',
    friends: ['Goldie Gentry', 'Aisha Tran'],
    isActive: true,
    balance: 2278,
    skills: ['adipisicing', 'irure', 'velit'],
    gender: 'female',
    age: 21,
  },
  {
    name: 'Carey Barr',
    email: 'careybarr@nurali.com',
    eyeColor: 'blue',
    friends: ['Jordan Sampson', 'Eddie Strong'],
    isActive: true,
    balance: 3951,
    skills: ['ex', 'culpa', 'nostrud'],
    gender: 'male',
    age: 27,
  },
  {
    name: 'Blackburn Dotson',
    email: 'blackburndotson@furnigeer.com',
    eyeColor: 'brown',
    friends: ['Jacklyn Lucas', 'Linda Chapman'],
    isActive: false,
    balance: 1498,
    skills: ['non', 'amet', 'ipsum'],
    gender: 'male',
    age: 38,
  },
  {
    name: 'Sheree Anthony',
    email: 'shereeanthony@kog.com',
    eyeColor: 'brown',
    friends: ['Goldie Gentry', 'Briana Decker'],
    isActive: true,
    balance: 2764,
    skills: ['lorem', 'veniam', 'culpa'],
    gender: 'female',
    age: 39,
  },
];
// Пиши код ниже этой строки
const getUserNames = users => users.map(user => user.name);
// Пиши код выше этой строки

// ================================== Задача 14 ======================================

// Дополни функцию getUserEmails(users) так, чтобы она возвращала массив почтовых адресов пользователей(свойство email) из массива объектов в параметре users.
// Пиши код ниже этой строки
const getUserEmails = users => users.map(user => user.email);
// Пиши код выше этой строки
// ================================== Задача 15 ======================================
// Методы filter и find
// Дополни код так, чтобы в переменной evenNumbers получился массив чётных чисел из массива numbers, а в переменной oddNumbers массив нечётных. Обязательно используй метод filter()

const numbers = [17, 24, 82, 61, 36, 18, 47, 52, 73];
// Пиши код ниже этой строки

const evenNumbers = numbers.filter(number => number % 2 == 0);
const oddNumbers = numbers.filter(number => number % 2 !== 0);
// ================================== Задача 16 ======================================

// ================================== Задача 17 ======================================

// ================================== Задача 18 ======================================

// ================================== Задача 19 ======================================

// ================================== Задача 20 ======================================

// ================================== Задача 21 ======================================

// ================================== Задача 22 ======================================

// ================================== Задача 23 ======================================

// ================================== Задача 24 ======================================

// ================================== Задача 25 ======================================

// ================================== Задача 26 ======================================

// ================================== Задача 27 ======================================

// ================================== Задача 28 ======================================

// ================================== Задача 29 ======================================

// ================================== Задача 30 ======================================

// ================================== Задача 31 ======================================

// ================================== Задача 32 ======================================

// ================================== Задача 33 ======================================

// ================================== Задача 34 ======================================

// ================================== Задача 35 ======================================

// ================================== Задача 36 ======================================

// ================================== Задача 37 ======================================

// ================================== Задача 38 ======================================

// ================================== Задача 39 ======================================

// ================================== Задача 40 ======================================

// ================================== Задача 41 ======================================

// ================================== Задача 42 ======================================
